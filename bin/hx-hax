#!/bin/sh
set -x

# find a pane that already has hx running
editor=kak
current_session=$(tmux display-message -p "#{session_id}")
# TODO: this will break if this is running in an X session outside a tmux session
editor_panes=$(tmux list-panes -a \
    -f "#{&&:#{==:#{session_id},$current_session},#{==:#{pane_current_command},$editor}}" \
    -F '#{pane_id} #{window_id} #{window_activity}' \
    | sort  -k3 | tail -n1)
read pane window << EOF
$(echo "$editor_panes" | cut -d ' ' -f 1-2)
EOF

if [ $editor = kak ] && echo "$1" | rg ':[0-9]+:[0-9]+$' -q; then
    	# regex=':[0-9]\+:[0-9]\+$'
    	# file=$(echo "$1" | sed "s/\(.*\)$regex/\1/")
    	# line=$(echo "$1" | sed "s/\($regex\)/\1/")
    	args=$(echo "$1" | sed 's/:\([0-9]\+:[0-9]\+$\)/ +\1/')
    	shift
    	args="$args $*"
	# args="$file +$line"
	# shift
	# if [ "$pane" ]; then
 #        	args="$args $(echo "$@" | tr ':' ' ' | tr -d +)"
	# else
 #    		args="$args +""$@"
 #    	fi
fi
if ! [ "$pane" ]; then
	# start a new pane
	pane=$(tmux split-window -P -F "#{pane_id}" $editor ${args:-@})
else
	# Escape for some reason doesn't get sent as the escape key if it shows up next to any other keys???
	tmux send-keys -t $pane Escape
	tmux send-keys -t $pane ":o ${args:-@}" Enter
	tmux select-window -t $window
	tmux select-pane -t $pane -Z
fi

if [ "$DISPLAY" ]; then
    tmux run-shell -t $pane 'xdotool windowactivate $WINDOWID'
fi
