#!/usr/bin/env bash
set -x

editor=kak
# find a pane that already has kak running
current_session=$(tmux display-message -p "#{session_id}")
# TODO: this will break if this is running in an X session outside a tmux session, need to check current_session probably
# https://man7.org/linux/man-pages/man1/tmux.1.html#FORMATS
editor_panes=$(tmux list-panes -a \
    -f "#{&&:#{==:#{session_id},$current_session},#{==:#{pane_current_command},$editor}}" \
    -F '#{pane_id} #{window_id} #{window_activity}' \
    | sort  -k3 | tail -n1)
read pane window << EOF
$(echo "$editor_panes" | cut -d ' ' -f 1-2)
EOF

if ! [ "$pane" ]; then
	# start a new pane
	pane=$(tmux split-window -P -F "#{pane_id}" env REAL_EDITOR=$editor editor-hax "$@")
else
	args=$(EDITOR_HAX_SPLIT_ONLY=1 editor-hax "$1")
	# Escape for some reason doesn't get sent as the escape key if it shows up next to any other keys???
	tmux send-keys -t $pane Escape
	tmux send-keys -t $pane ":edit $args" Enter
	tmux select-window -t $window
	tmux select-pane -t $pane -Z
fi

if [ "$DISPLAY" ]; then
    tmux run-shell -t $pane 'xdotool windowactivate $WINDOWID'
fi
