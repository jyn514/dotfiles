#!/bin/sh
set -eu

verbose() {
	if [ "${V:-}" = 1 ]; then
		"$@"
	fi
}

verbose set -x

cd "$(dirname "$0")"

qmk=~/src/qmk_firmware
if ! command -v qmk >/dev/null 2>&1; then
	pip install --user qmk
fi
if ! [ -d $qmk ]; then
	qmk setup zsa/qmk_firmware -b firmware24 -H $qmk
fi

layout=$(curl -s https://jyn.dev/keyboard/ -w "%{redirect_url}" | sed -E 's#.*moonlander/layouts/([^/]+)/.*#\1#')

revision=$(curl -s https://oryx.zsa.io/graphql --compressed -H 'content-type: application/json' --data-raw '{"operationName":"getLayout","variables":{"hashId":"'"$layout"'","geometry":"moonlander","revisionId":"latest"},"query":"'"$(tr '\n' ' ' < ../lib/oryx.graphql)\"}" | jq -r .data.layout.revision.hashId)

dst=$HOME/.local/share/oryx
archive=$dst/$revision.zip
if ! [ -e "$archive" ]; then
	mkdir -p "$dst"
	curl https://oryx.zsa.io/source/"$revision" -o "$archive"
fi

revision_name=$layout-$revision
layout_dst=$qmk/keyboards/zsa/moonlander/keymaps/$revision_name
rm -rf "$layout_dst"
cd "$(mktemp -d -t oryx-"$revision_name"-XXXXXXX)"
unzip "$archive"
mv zsa_moonlander_*_source "$layout_dst"
rm "$layout_dst/keymap.json"

# CHANGES GO HERE
sed -i 's/SS_DELAY(100)/SS_DELAY(5)/g' "$layout_dst/keymap.c"

macro() {
	printf %s "SS_TAP(X_$(printf %s ${1} | tr a-z A-Z))"
	shift
	for x in "$@"; do
		printf %s " SS_DELAY(5) SS_TAP(X_$(printf %s ${x} | tr a-z A-Z))"
	done
}

unicode() {
	for x in "$@"; do
		printf "SS_LCTL(SS_LSFT(SS_TAP(X_U))) SS_DELAY(5) "
		# https://stackoverflow.com/a/51054623
		echo "$x" | grep -o . | while read -r c; do macro "$c"; done
		printf " SS_TAP(X_ENTER) "
	done
}

# ```\n{cursor}\n```
backticks="SEND_STRING($(macro GRAVE GRAVE GRAVE ENTER ENTER GRAVE GRAVE GRAVE UP));"
# ðŸ‘‰ðŸ‘ˆ
point="SEND_STRING($(unicode 1f449 1f448));"

sed -i "
	s/SEND_STRING(SS_TAP(X_GRAVE).*SS_TAP(X_GRAVE).*SS_TAP(X_GRAVE).*/$backticks/;
	s/SEND_STRING(SS_TAP(X_P).*SS_TAP(X_L).*SS_TAP(X_P).*SS_TAP(X_R).*/$point/;
" "$layout_dst/keymap.c"

# compile and flash
cd "$qmk"
if ! [ -e "zsa_moonlander_$revision_name.bin" ]; then
	qmk compile -kb moonlander -km "$revision_name"
fi

PYTHONWARNINGS=ignore qmk flash -kb moonlander -km "$revision_name" -e SILENT=true
